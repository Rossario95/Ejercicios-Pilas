# -*- coding: utf-8 -*-
"""ejercicioDosPilas.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xJrE1Mxj6mCw6HnlHRwuoPZBBdMZyFx-
"""

#2.Conversión de base
#Implementa un algoritmo que convierta un número decimal a binario usando una pila

class Pila:
    def __init__(self):
        self.items = []
    def push(self, dato):
        self.items.append(dato)
    def pop(self):
        return self.items.pop() if not self.is_empty() else None
    def is_empty(self):
        return len(self.items) == 0

def decimal_a_binario(num_decimal):
    pila = Pila()
    if num_decimal == 0:
        return "0"
    while num_decimal > 0:
        residuo = num_decimal % 2
        pila.push(residuo)
        num_decimal //= 2
    num_binario = ""
    while not pila.is_empty():
        num_binario += str(pila.pop())
    return num_binario

# Preguntar al usuario
try:
    numero = int(input("Introduce un número decimal para convertir a binario: "))
    if numero < 0:
        print("Por favor, introduce un número entero positivo o cero.")
    else:
        resultado = decimal_a_binario(numero)
        print(f"{numero} en binario es {resultado}")
except ValueError:
    print("Por favor, introduce un número válido.")

